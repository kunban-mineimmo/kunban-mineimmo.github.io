{"version":3,"sources":["utils/Constants.js","layouts/CommonComponents.js","utils/Utility.js","layouts/Footer.js","components/MCredits/index.js","layouts/Header.js","layouts/PageContainers.js","utils/LanguageUtils/LocaleFetch.js","utils/LanguageUtils/LanguageProvider.js","AppRouter.js","pages/Listing/Listing.js","pages/Listing/index.js","App.js","serviceWorker.js","index.js"],"names":["STATIC_URL","process","REACT_APP_STATIC_URL","DEFAULT_LOCALE","IMAGE_BASE_PATH","TRANSLATION_LOCATION","VARIANTS","FONT_SIZE_VARIANTS","12","14","StyledImg","styled","width","css","height","Img","imageName","src","rest","Array","CONST","Ul","ANCHOR_VARIANT_DEF","color","colors","green","gray","black","Anchor","fs","theme","variant","PaddedContainerStyle","cursor","HeaderPaddedContainer","Box","PaddedBodyContainer","HeaderImageContainer","HeaderLinksContainer","HeaderLinkItem","UserNotificationContainer","Flex","FooterPaddedContainer","FooterContact","id","mt","href","FooterLinks","FooterAddress","Footer","SimpleGrid","columns","spacing","getDimensions","containerWidth","getCoinCss","backgroundColor","orange","getColor","MCreditContainer","props","BalanceContainer","creditBalance","alignItems","TopNavLinkItem","active","translationKey","path","notificationCount","UserAvatar","Header","injectIntl","formatMessage","intl","alt","pt","ml","MCredits","PageContainer","children","hasHeader","hasFooter","LOCALE_FETCH_ERRORS","flattenMessages","nestedMessages","prefix","Object","keys","reduce","messages","key","value","prefixedKey","assign","getErrorObj","errorType","reason","isRequestProcessing","fetchLocale","locale","userTranslationFile","url","window","location","origin","getTranslationFileLocation","Promise","resolve","reject","all","fetch","then","resp","json","userLangTranslation","catch","error","finally","LanguageProviderContext","createContext","LanguageProvider","useState","state","setState","contextValue","useEffect","err","Error","Provider","Router","initialRoute","MemoryRouter","BrowserRouter","PROPERTY_MOCK","i","push","HeroSectionImageContainer","white","FilterPanelSection","FilterPanelContainer","ListingSectionContainer","getFilterItemsTextClass","console","log","FilterItem","MoreFiltersOption","StyledSearchContainer","label","getSearchInputStyles","className","FilterSearchInputButton","ListingItemsContainer","MapViewLinkContainer","HeroSection","FilterSearchBox","withTheme","onSearch","searchKey","setSearchKey","searchBoxRef","useRef","placeholder","data-testid","inputRef","debounceTimeout","onChange","event","changedValue","target","FilterSection","Icon","name","size","PropertyCardContainer","topRoundedStyles","PropertyImageContainer","PropertyCardDetailsContainer","PrimaryFeatureList","getCardSecondaryText","getCardPrimaryText","CardFooterContainer","PropertyCard","propertyDetails","p","alignSelf","mr","Listing","mb","values","listingCount","map","defaultMessages","defaultTranslations","cache","createIntlCache","StyledAppContainer","AppContainer","ThemeProvider","createIntl","lodash","merge","AppRouter","Boolean","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.863cf3af.chunk.js","sourcesContent":["export default {\n  STATIC_URL: process.env.REACT_APP_STATIC_URL || '/',\n  DEFAULT_LOCALE: 'en-US',\n  IMAGE_BASE_PATH: '/assets/images/',\n  TRANSLATION_LOCATION: 'assets/translations'\n}","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Flex } from './../components/Grid'\nimport { css } from '@emotion/core'\nimport { getImageBasePath } from '../utils/Utility'\n\nexport const VARIANTS = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  LABEL: 'label'\n}\n\nexport const FONT_SIZE_VARIANTS = {\n  12: '12px',\n  14: '14px'\n}\n\n/* ---- Component Overrides ---- */\nconst StyledImg = styled('img')`\n  ${({ width }) => width ? css({ width: `${width}px` }) : ''}\n  ${({ height }) => height ? css({ width: `${height}px` }) : ''}\n  max-width: 100%;\n`\nexport const Img = ({src, ...rest}) => \n  <StyledImg src={getImageBasePath(src)} {...rest} />\nexport const Ul = styled('ul')`\n  margin: 0;\n`\nconst ANCHOR_VARIANT_DEF = {\n  [VARIANTS.PRIMARY]: {\n    color: colors => colors.green[500]\n  },\n  [VARIANTS.SECONDARY]: {\n    color: colors => colors.gray[500]\n  },\n  [VARIANTS.LABEL]: {\n    color: colors => colors.black\n  }\n}\nexport const Anchor = styled('a')`\n  font-size: ${({ fs }) => FONT_SIZE_VARIANTS[fs] || FONT_SIZE_VARIANTS[14]};\n  color:  ${({ theme: { colors }, variant = VARIANTS.PRIMARY }) => ANCHOR_VARIANT_DEF[variant].color(colors)};\n  text-decoration: none;\n  transition: .4s ease all;\n  &:hover{\n    text-decoration: underline;\n  }\n`\n/* ---- Component Overrides Ends ---- */\n/* ---- Utility Classes ---- */\nexport const CursorPointer = css({\n  cursor: 'pointer'\n})\n/* ---- Utility Classes End ---- */\n\nconst PAGE_PADDING_X = 180\nconst PaddedContainerStyle = css`\n  padding: 0 ${PAGE_PADDING_X}px;\n`\nexport const HeaderPaddedContainer = styled(Box)`\n  ${PaddedContainerStyle}\n`\nexport const PaddedBodyContainer = styled(Box)`\n  ${PaddedContainerStyle}\n`\nexport const HeaderImageContainer = styled(Box)`\n  padding: 32px 0;\n`\nexport const HeaderLinksContainer = styled(Box)`\n  padding: 38px 0;\n`\nexport const HeaderLinkItem = styled('li')`\n  display: inline-block;\n  list-style: none;\n  margin-left: 40px;\n  &:first-of-type{\n    margin-left: 50px;\n  }\n`\nexport const UserNotificationContainer = styled(Flex)`\n  margin-left: auto;\n  padding: 18px 0 31px;\n`\nconst FOOTER_PADDING_Y = 88\nexport const FooterPaddedContainer = styled(Box)`\n  ${PaddedContainerStyle}\n  padding-top: ${FOOTER_PADDING_Y}px;\n  padding-bottom: ${FOOTER_PADDING_Y}px;\n  background-color: ${({ theme: { colors }}) => colors.gray[100]};\n`\n","import CONST from './Constants'\n\nexport const getImageBasePath = (imageName) => {\n  if (imageName instanceof Array) {\n    imageName = imageName[0]\n  }\n  return `${CONST.IMAGE_BASE_PATH}${imageName}`\n}","import React from 'react'\nimport { Flex, SimpleGrid } from '@chakra-ui/core'\nimport { FormattedMessage, injectIntl } from 'react-intl'\nimport { Box } from './../components/Grid'\nimport {\n  Anchor,\n  VARIANTS,\n  FooterPaddedContainer\n} from './CommonComponents'\n\nconst TRANSLATION_BASE_PATH = 'footer'\n\n\nexport const FooterContact = () =>\n  <Box>\n    <h4>\n      <FormattedMessage id={`${TRANSLATION_BASE_PATH}.contact`} />\n    </h4>\n    <Box mt={3}>\n      <Anchor href=\"mailto:support@mineimmo.com\" variant={VARIANTS.LABEL}>\n        support@mineimmo.com\n    </Anchor>\n    </Box>\n    <Box mt={4}>\n      <Anchor href=\"tel:+4917661376556\" variant={VARIANTS.LABEL}>\n        <FormattedMessage id={`${TRANSLATION_BASE_PATH}.phone_number`} />\n      </Anchor>\n    </Box>\n  </Box>\n\nexport const FooterLinks = () =>\n  <Box>\n    <h4>\n      <FormattedMessage id={`${TRANSLATION_BASE_PATH}.more`} />\n    </h4>\n    <Box mt={3}>\n      <Anchor href=\"#\" variant={VARIANTS.LABEL}>\n        <FormattedMessage id={`${TRANSLATION_BASE_PATH}.imprint`} />\n      </Anchor>\n    </Box>\n    <Box mt={3}>\n      <Anchor href=\"#\" variant={VARIANTS.LABEL}>\n        <FormattedMessage id={`${TRANSLATION_BASE_PATH}.privacy_policy`} />\n      </Anchor>\n    </Box>\n  </Box>\n\nexport const FooterAddress = () =>\n  <Box>\n    <h4>\n      <FormattedMessage id={`${TRANSLATION_BASE_PATH}.address`} />\n    </h4>\n    <Box mt={3}>\n      <Box>\n        <FormattedMessage id={`${TRANSLATION_BASE_PATH}.office_address_line_1`} />\n      </Box>\n      <Box mt={2}>\n        <FormattedMessage id={`${TRANSLATION_BASE_PATH}.office_address_line_2`} />\n      </Box>\n      <Box mt={2}>\n        <FormattedMessage id={`${TRANSLATION_BASE_PATH}.office_address_line_3`} />\n      </Box>\n    </Box>\n  </Box>\n\nexport const Footer = () => {\n  return <FooterPaddedContainer>\n    <SimpleGrid columns={3} spacing=\"70px\">\n      <FooterLinks />\n      <FooterAddress />\n      <FooterContact />\n    </SimpleGrid>\n  </FooterPaddedContainer>\n}","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Box, Flex } from '../Grid'\n\nconst DEFAULT_ICON_WIDTH = 20\nconst getDimensions = (containerWidth) => css({\n  width: `${containerWidth || DEFAULT_ICON_WIDTH}px`,\n  height: `${containerWidth || DEFAULT_ICON_WIDTH}px`\n})\nconst getColor = ({ colors }) => css({\n  backgroundColor: colors.orange[200]\n})\nconst getCoinCss = ({ containerWidth, theme }) => css`\n  ${getDimensions(containerWidth)}\n  ${getColor(theme)}\n  position: absolute;\n  border-radius: 50%;\n`\nconst MCreditContainer = styled(Box)`\n  position: relative;\n  margin-left: 5px;\n  ${({ containerWidth }) => getDimensions(containerWidth)}\n  ::before{\n    content: '';\n    ${({ containerWidth, ...props }) => getCoinCss({ containerWidth: (containerWidth || DEFAULT_ICON_WIDTH) + 2, ...props })}\n    left: -1px;\n    top: 1px;\n  }\n  ::after{\n    content: 'm';\n    color: ${({theme: {colors}}) => colors.orange[100]};\n    ${(props) => getCoinCss(props)}\n    border: 1px solid ${({theme: {colors}}) => colors.orange[100]};\n    text-align: center;\n    font-size: 14px;\n  }\n`\nconst BalanceContainer = styled(Box)`\n  margin-left: 8px;\n  font-size: 14px;\n  font-weight: 500;\n`\nexport default ({ width, creditBalance }) => {\n  return <Flex alignItems=\"center\">\n    <MCreditContainer containerWidth={width} />\n    <BalanceContainer>\n      {creditBalance}\n    </BalanceContainer>\n  </Flex>\n}","import React from 'react'\nimport { FormattedMessage, injectIntl } from 'react-intl'\nimport styled from '@emotion/styled'\nimport {\n  VARIANTS,\n  Img,\n  Ul,\n  Anchor,\n  HeaderPaddedContainer,\n  HeaderImageContainer,\n  HeaderLinksContainer,\n  HeaderLinkItem,\n  UserNotificationContainer\n} from './CommonComponents'\nimport { Box, Flex } from './../components/Grid'\nimport MCredits from '../components/MCredits'\n\nconst TRANSLATION_BASE_PATH = 'top_navbar'\n\nexport const TopNavLinkItem = ({ active, translationKey, path, notificationCount }) =>\n  <HeaderLinkItem>\n    <Anchor href={path} variant={active ? VARIANTS.PRIMARY : VARIANTS.SECONDARY}>\n      <FormattedMessage id={`${TRANSLATION_BASE_PATH}.links.${translationKey}`} />\n      &nbsp;\n      {notificationCount && `(${notificationCount})`}\n    </Anchor>\n  </HeaderLinkItem>\n\nexport const UserAvatar = styled(Img)`\n  cursor: pointer;\n`\n\nexport const Header = injectIntl(({ intl: { formatMessage } }) => {\n  return <HeaderPaddedContainer>\n    <header>\n      <Flex>\n        <HeaderImageContainer>\n          <Img src=\"logo.png\" alt={formatMessage({ id: 'top_navbar.logo_alt_text' })} />\n        </HeaderImageContainer>\n        <HeaderLinksContainer>\n          <Ul>\n            <TopNavLinkItem active translationKey=\"listings\" path=\"/listings\" />\n            <TopNavLinkItem translationKey=\"appointments\" path=\"/appointments\" notificationCount={2} />\n            <TopNavLinkItem translationKey=\"blog\" path=\"/blog\" />\n          </Ul>\n        </HeaderLinksContainer>\n        <UserNotificationContainer alignItems=\"center\">\n          <Box pt=\"5px\">\n            <Anchor href=\"/notifications\">\n              <Img src=\"notification_bell.svg\" />\n            </Anchor>\n          </Box>\n          <Box ml={30}>\n            <MCredits width={22} creditBalance={3} />\n          </Box>\n          <Box ml={30} pt=\"6px\">\n            <UserAvatar src=\"silhoutte-circle.svg\" width=\"40\" />\n          </Box>\n        </UserNotificationContainer>\n      </Flex>\n    </header>\n  </HeaderPaddedContainer>\n})","import React from 'react'\nimport { Box } from '../components/Grid'\nimport { Footer } from './Footer'\nimport { Header } from './Header'\n\nexport const PageContainer = ({ children, hasHeader = true, hasFooter = true }) =>\n  <Box>\n    {hasHeader && <Header />}\n    <Box>\n      {children}\n    </Box>\n    {hasFooter && <Footer />}\n  </Box>","import CONST from './../Constants'\n\nexport const LOCALE_FETCH_ERRORS = {\n  PREVIOUS_REQUEST_IN_PROGRESS: 'PREVIOUS_REQUEST_IN_PROGRESS',\n  NETWORK_ERROR: 'NETWORK_ERROR'\n}\n\nlet getTranslationFileLocation = (locale = '') => {\n  // this is because when the CDN URL is '/'\n  // it takes the relative path like /user/{id}/profile/translation/json/file\n  // hence having this as absolute urls\n  const url = CONST.STATIC_URL === '/' ? `${window.location.origin}/` : CONST.STATIC_URL\n  return `${url}${CONST.TRANSLATION_LOCATION}/${locale}.json`\n}\n\nexport const flattenMessages = (nestedMessages, prefix = '') => {\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    let value = nestedMessages[key]\n    let prefixedKey = prefix ? `${prefix}.${key}` : key\n\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey))\n    }\n\n    return messages\n  }, {})\n}\n\n\n\nconst getErrorObj = (errorType, reason = '') => {\n  return {\n    errorType,\n    reason\n  }\n}\n\n// On load of the app for first time, RequiredDataToStartApp does setLocale twice.\n// This is because even before the first XHR completes, the re-render happens in RDTSA and\n// second XHR is fired, so having this feature of processing one request at a time\n\n// flag for not firing multiple fetch calls from LanguageProvider\nlet isRequestProcessing = false\n\nexport const fetchLocale = (locale) => {\n  const userTranslationFile = getTranslationFileLocation(locale)\n\n  // reject the request if another request is in progress\n  if (isRequestProcessing) {\n    return new Promise((resolve, reject) => {\n      reject(getErrorObj(LOCALE_FETCH_ERRORS.PREVIOUS_REQUEST_IN_PROGRESS, ''))\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    isRequestProcessing = true\n    Promise.all([\n      fetch(userTranslationFile).then((resp) => resp.json())\n    ]).then(([userLangTranslation]) => {\n      resolve([flattenMessages(userLangTranslation)])\n    })\n      .catch(error => {\n        debugger\n        reject(getErrorObj(LOCALE_FETCH_ERRORS.NETWORK_ERROR, `localFetch.js cannot request language files. Reason -> ${error}`))\n      })\n      .finally(() => {\n        isRequestProcessing = false\n      })\n  })\n}","import React, { useState, createContext, useContext, useEffect } from 'react'\n// import { addLocaleData } from 'react-intl'\nimport CONST from './../Constants'\nimport { fetchLocale } from './LocaleFetch'\n\n\n\nconst LanguageProviderContext = createContext({\n  locale: CONST.DEFAULT_LOCALE,\n  messages: null\n})\nexport const LanguageProvider = ({ children }) => {\n  const [state, setState] = useState({\n    locale: CONST.DEFAULT_LOCALE,\n    messages: null\n  })\n  const contextValue = {\n    ...state\n  }\n  useEffect(() => {\n    fetchLocale(state.locale)\n      .then(([messages]) => {\n        setState({\n          ...state,\n          messages: messages\n        })\n      }).catch(err => {\n        throw new Error(`Failed to fetch json for locale :: ${state.locale}`)\n      })\n  }, [])\n  return <LanguageProviderContext.Provider value={contextValue}>\n    {children({\n      ...state\n    })}\n  </LanguageProviderContext.Provider>\n}\n\nexport const useLanguage = () => useContext(LanguageProviderContext)\n\n","import React from 'react'\nimport { MemoryRouter, BrowserRouter, Route, Switch } from 'react-router-dom'\n\nexport default ({ children, initialRoute }) => {\n  const Router = initialRoute ? MemoryRouter : BrowserRouter\n  return <Router>\n    <Route>\n      <>\n        {children}\n      </>\n      {/* <Switch>\n      <Route render={() => (<PageNotFound />)} />\n    </Switch> */}\n    </Route>\n  </Router>\n}\n","/** @jsx jsx */\nimport { Flex, Box } from './../../components/Grid'\nimport { Icon, SimpleGrid } from '@chakra-ui/core'\nimport { Img } from '../../layouts/CommonComponents'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core'\nimport { css as className } from 'emotion'\nimport { FormattedMessage, injectIntl } from 'react-intl'\nimport { PaddedBodyContainer } from './../../layouts/CommonComponents'\nimport { withTheme } from 'emotion-theming'\nimport { useEffect, useRef, useState } from 'react'\nimport { DebounceInput } from 'react-debounce-input'\n\nconst PROPERTY_MOCK = []\nfor (let i = 1; i <= 15; i++) {\n  PROPERTY_MOCK.push({\n    id: `apt-${i}`\n  })\n}\n\nconst TRANSLATIONS_BASE_PATH = 'listing'\n\nconst HeroSectionImageContainer = styled(Box)`\n  position: relative;\n  .hero-text{\n    position: absolute;\n    background-color: ${({ theme: { colors } }) => colors.white};\n    padding: 20px;\n    bottom: 100px;\n    right: -190px;\n    font-size: 40px;\n    font-weight: bold;\n    width: 250px;\n  }\n`\nconst FilterPanelSection = styled(Box)`\n  width: 100%;\n  position: relative;\n`\nconst FilterPanelContainer = styled(Flex)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: -32px;\n  background-color: ${({ theme: { colors } }) => colors.white};\n  border: 1px solid ${({ theme: { colors } }) => colors.gray[50]};\n  border-radius: 10px;\n  padding: 42px 32px;\n`\nconst ListingSectionContainer = styled(PaddedBodyContainer)`\n  background-color: ${({ theme: { colors } }) => colors.gray[50]};\n`\nconst getFilterItemsTextClass = colors => {\n  console.log(colors)\n  return css`\n    color: ${colors.gray[500]};\n    font-size: 14px;\n    `\n}\nconst FilterItem = styled(Box)`\n  ${({ theme: { colors } }) => getFilterItemsTextClass(colors)}\n  margin-left: 20px;\n  position: relative;\n  &::before{\n    content: '';\n    position: absolute;\n    left: -11px;\n    top: 8px;\n    width: 3px;\n    height: 3px;\n    border-radius: 50%;\n    background-color: ${({ theme: { colors } }) => colors.gray[500]};\n  }\n  &:first-of-type{\n    margin-left: 0;\n    &::before{\n      display: none;\n    }\n  }\n`\nconst MoreFiltersOption = styled(Box)`\n  position: relative;\n  cursor: pointer;\n  ${({ theme: { colors } }) => getFilterItemsTextClass(colors)}\n  padding-right: 20px;\n  margin-left: 20px;\n  .icon-container{\n    position: absolute;\n    right: 0;\n    top: -2px;\n  }\n`\nexport const StyledSearchContainer = styled(Flex, {\n  label: 'StyledSearchContainer'\n})`\n  border: 1px solid ${({ theme: { colors } }) => colors.gray[200]};\n  border-radius: 4px;\n  :focus-within {\n    border: 1px solid ${({ theme: { colors } }) => colors.gray[500]};\n  }\n  input[type='text']::-ms-clear {\n    display: none;\n  }\n`\nexport const getSearchInputStyles = ({ colors }) => className`\n  width: 100%;\n  height: 100%;\n  display: inline-block;\n  border: none;\n  outline: none;\n  font-size: 12px;\n  font-weight: 500;\n  color: ${colors.gray[500]};\n  padding: 12px;\n  box-sizing: border-box;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  :focus {\n    border-right: 1px solid ${colors.gray[500]};\n  }\n  ::placeholder {\n    color: ${colors.gray[300]};\n    font-weight: 400;\n  }\n`\nconst FilterSearchInputButton = styled(Box)`\n  padding: 12px;\n  background-color: ${({ theme: { colors } }) => colors.gray[100]};\n  font-size: 14px;\n  cursor: pointer;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n`\nconst ListingItemsContainer = styled(Box)`\n  padding-top: 104px;\n  padding-bottom: 160px;\n`\nconst MapViewLinkContainer = styled(Flex)`\n  cursor: pointer;\n  color: ${({ theme: { colors } }) => colors.gray[500]};\n  font-size: 14px;\n`\nexport const HeroSection = () => {\n  return <Flex>\n    <HeroSectionImageContainer width={10 / 12}>\n      <Img src=\"hero-image.png\" />\n      <Box className=\"hero-text\">\n        <FormattedMessage id={`${TRANSLATIONS_BASE_PATH}.hero_section.text`} />\n      </Box>\n    </HeroSectionImageContainer>\n  </Flex>\n}\n\nexport const FilterSearchBox = injectIntl(withTheme(({ value, onSearch, intl: { formatMessage }, theme }) => {\n  const [searchKey, setSearchKey] = useState('')\n  const searchBoxRef = useRef(null)\n\n  useEffect(() => {\n    !!value && setSearchKey(value)\n  }, [value])\n\n  return <StyledSearchContainer ml=\"auto\">\n    <Box width={300}>\n      <DebounceInput\n        placeholder={formatMessage({ id: `${TRANSLATIONS_BASE_PATH}.filters.search_placeholder` })}\n        data-testid=\"security-help-slider-search\"\n        className={getSearchInputStyles(theme)}\n        inputRef={searchBoxRef}\n        value={searchKey}\n        debounceTimeout={300}\n        onChange={(event) => {\n          let changedValue = event.target.value\n          setSearchKey(changedValue)\n          onSearch && onSearch(changedValue)\n        }}\n      />\n    </Box>\n    <FilterSearchInputButton>\n      <FormattedMessage id=\"common_cta.search\" />\n    </FilterSearchInputButton>\n  </StyledSearchContainer>\n}))\n\nexport const FilterSection = () => {\n  return <FilterPanelSection>\n    <FilterPanelContainer alignItems=\"center\">\n      <FilterItem>\n        € 1.200 - 1.800\n      </FilterItem>\n      <FilterItem>\n        2 - 3 Rooms\n      </FilterItem>\n      <FilterItem>\n        60 - 90 sqft\n      </FilterItem>\n      <MoreFiltersOption>\n        <FormattedMessage id={`${TRANSLATIONS_BASE_PATH}.filters.more_filters`} />\n        <Box className=\"icon-container\">\n          <Icon name=\"chevron-down\" size=\"18px\" />\n        </Box>\n      </MoreFiltersOption>\n      <FilterSearchBox />\n    </FilterPanelContainer>\n  </FilterPanelSection>\n}\n\nconst PROPERTY_CARD_BORDER_RADIUS = 10\nconst PropertyCardContainer = styled(Box)`\n  cursor: pointer;\n  max-width: 100%;\n  border-radius: ${PROPERTY_CARD_BORDER_RADIUS}px;\n  box-shadow: 2px 2px 8px 4px rgba(0, 0, 0, 0.05);\n`\nconst topRoundedStyles = css`\n  border-top-left-radius: ${PROPERTY_CARD_BORDER_RADIUS}px;\n  border-top-right-radius: ${PROPERTY_CARD_BORDER_RADIUS}px;\n`\nconst PropertyImageContainer = styled(Box)`\n  ${topRoundedStyles}\n  img{\n    ${topRoundedStyles}\n  }\n`\nconst PropertyCardDetailsContainer = styled(Box)`\n  background-color: ${({ theme: { colors } }) => colors.white};\n  h2{\n    margin: 0;\n  }\n`\nconst PrimaryFeatureList = styled('ul')`\n  padding: 0;\n  margin-top: 14px;\n  margin-bottom: 6px;\n  li{\n    list-style: none;\n    display: inline-block;\n    margin-left: 24px;\n    position: relative;\n    font-size: 14px;\n    &::before{\n      content: '';\n      position: absolute;\n      left: -11px;\n      top: 50%;\n      margin-top: -1px;\n      width: 3px;\n      height: 3px;\n      border-radius: 50%;\n      background-color: ${({ theme: { colors } }) => colors.black};\n    }\n    &:first-of-type{\n      margin-left: 0;\n      &::before{\n        display: none;\n      }\n    }\n    \n  }\n`\nconst getCardSecondaryText = colors => className`\n  font-size: 12px;\n  color: ${colors.gray[500]};\n`\nconst getCardPrimaryText = colors => className`\n  font-size: 14px;\n  color: ${colors.gray[500]};\n`\nconst CardFooterContainer = styled(Box)`\n  padding: 20px 16px;\n  background-color: ${({ theme: { colors } }) => colors.gray[100]};\n  border-bottom-left-radius: ${PROPERTY_CARD_BORDER_RADIUS}px;\n  border-bottom-right-radius: ${PROPERTY_CARD_BORDER_RADIUS}px;\n`\nexport const PropertyCard = withTheme(({ theme: { colors }, propertyDetails }) => {\n  return <PropertyCardContainer>\n    <PropertyImageContainer>\n      <Img src={`property-images/${propertyDetails.id}/thumb.jpg`} />\n    </PropertyImageContainer>\n    <PropertyCardDetailsContainer p={4}>\n      <h2>1.653 €</h2>\n      <PrimaryFeatureList>\n        <li>3 Rooms</li>\n        <li>84 sqft</li>\n        <li>4th floor</li>\n      </PrimaryFeatureList>\n      <Box className={getCardSecondaryText(colors)}>\n        Auguste-Viktoria-Str. 79, 14193\n      </Box>\n    </PropertyCardDetailsContainer>\n    <CardFooterContainer>\n      <Flex>\n        <Box className={getCardPrimaryText(colors)} alignSelf=\"center\">\n          9 Sep, 2:30 pm\n        </Box>\n        <Box ml=\"auto\">\n          <Flex alignItems=\"center\">\n            <Box mr={2} className={getCardPrimaryText(colors)}>\n              9 / 15\n            </Box>\n            <Img src=\"silhoutte-circle.svg\" width=\"26\" />\n          </Flex>\n        </Box>\n      </Flex>\n    </CardFooterContainer>\n  </PropertyCardContainer>\n})\n\nexport const Listing = () => {\n  return <Box>\n    <PaddedBodyContainer mt={60} mb={140}>\n      <HeroSection />\n    </PaddedBodyContainer>\n    <ListingSectionContainer>\n      <FilterSection />\n      <ListingItemsContainer>\n        <Flex alignItems=\"center\" mt=\"12px\" mb=\"24px\">\n          <h2>\n            <FormattedMessage id={`${TRANSLATIONS_BASE_PATH}.listing_title`} values={{ listingCount: 438 }} />\n          </h2>\n          <MapViewLinkContainer ml=\"18px\" alignItems=\"center\">\n            <Box>\n              <Icon name=\"view\" />\n            </Box>\n            <Box pt=\"2px\" ml={2}>\n              <FormattedMessage id={`${TRANSLATIONS_BASE_PATH}.map_view_link`} />\n            </Box>\n          </MapViewLinkContainer>\n        </Flex>\n        <SimpleGrid columns={3} spacing=\"70px\">\n          {PROPERTY_MOCK.map(p => <PropertyCard key={p.id} propertyDetails={p} />)}\n        </SimpleGrid>\n      </ListingItemsContainer>\n    </ListingSectionContainer>\n  </Box>\n}","import { Listing } from './Listing'\n\nexport default Listing","import React from 'react'\nimport lodash from 'lodash'\nimport { Box } from './components/Grid'\nimport { PageContainer } from './layouts/PageContainers'\nimport { ThemeProvider } from '@chakra-ui/core'\nimport { createIntl, createIntlCache, RawIntlProvider } from 'react-intl'\nimport { LanguageProvider } from './utils/LanguageUtils/LanguageProvider'\nimport { flattenMessages } from './utils/LanguageUtils/LocaleFetch'\nimport defaultTranslations from './DefaultTranslations/en-US.json'\nimport AppRouter from './AppRouter'\nimport Listing from './pages/Listing'\nimport styled from '@emotion/styled'\n\nconst defaultMessages = flattenMessages(defaultTranslations)\nconst cache = createIntlCache()\n\nconst StyledAppContainer = styled(Box)`\n  font-size: 14px;\n`\n\nconst AppContainer = ({ children }) => <StyledAppContainer>\n  {children}\n</StyledAppContainer>\n\n\nexport default ({ initialRoute }) => {\n  return <ThemeProvider>\n    <LanguageProvider>\n      {({ locale, messages = {} }) => {\n        const intl = createIntl({\n          locale: locale,\n          messages: messages ? lodash.merge(flattenMessages(messages), defaultMessages) : defaultMessages\n        }, cache)\n        return <RawIntlProvider\n          value={intl}\n        >\n          <AppContainer>\n            <PageContainer>\n              <AppRouter initialRoute={initialRoute}>\n                <Listing />\n              </AppRouter>\n            </PageContainer>\n          </AppContainer>\n        </RawIntlProvider>\n      }}\n    </LanguageProvider>\n  </ThemeProvider>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}